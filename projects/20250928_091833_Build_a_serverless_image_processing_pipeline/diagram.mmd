graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - AWS Elastic Load...))
    api1[API Gateway - AWS API Gateway]
    func1[Image Upload Function - AWS Lambda]
    func2[Image Processing Function - AWS Lambda]
    func3[Image Storage Function - AWS Lambda]
    storage1[(Image Storage - AWS S3)]
    queue1[Processing Queue - AWS SQS]
    db1[(Metadata Database - AWS DynamoDB)]
    cache1{Cache Layer - AWS ElastiCache - Redis}
    cdn1[[Content Delivery Network - AWS...]]

    lb1 -->|routes requests to| api1
    api1 -->|triggers| func1
    func1 -->|uploads image to| storage1
    func1 -->|adds image to processing queue| queue1
    queue1 -->|triggers| func2
    func2 -->|stores processed image to| storage1
    func2 -->|updates metadata in| db1
    func2 -->|caches processed image| cache1
    func3 -->|distributes images via| cdn1
    func3 -->|updates metadata in| db1

    class lb1 userInterface
    class api1 apiLayer
    class func1 service
    class func2 service
    class func3 service
    class storage1 database
    class queue1 service
    class db1 database
    class cache1 cache
    class cdn1 external