graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - Nginx))
    api1[API Gateway - Express.js]
    authService[Authentication Service - JWT, OAuth2]
    editorService[Real-time Editor Service - Node.js,...]
    collaborationService[Collaboration Service - Elixir,...]
    db1[(User Database - PostgreSQL)]
    db2[(Document Database - MongoDB)]
    cache1{Session Cache - Redis}
    messageQueue[Message Queue - Kafka]
    external1[[Third-party API - GitHub API]]

    lb1 -->|HTTP request| api1
    api1 -->|REST API call| authService
    api1 -->|WebSocket connection| editorService
    api1 -->|WebSocket connection| collaborationService
    authService -->|SQL query| db1
    editorService -->|NoSQL query| db2
    editorService -->|cache read/write| cache1
    collaborationService -->|publish/subscribe| messageQueue
    messageQueue -->|message delivery| editorService
    api1 -->|REST API call| external1

    class lb1 userInterface
    class api1 apiLayer
    class authService service
    class editorService service
    class collaborationService service
    class db1 database
    class db2 database
    class cache1 cache
    class messageQueue service
    class external1 external