graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - NGINX))
    api_gateway[API Gateway - Kong]
    cache_service[Caching Service - Redis]
    data_service[Data Service - Node.js + Express]
    database[(Database - PostgreSQL)]
    message_queue[Message Queue - Kafka]
    monitoring[Monitoring Service - Prometheus]
    cache_invalidation_service[Cache Invalidation Service - Node.js]

    lb1 -->|HTTP Traffic| api_gateway
    api_gateway -->|API Calls| data_service
    data_service -->|Cache Read/Write| cache_service
    data_service -->|Database Queries| database
    data_service -->|Event Publishing| message_queue
    message_queue -->|Event Consumption| cache_invalidation_service
    cache_invalidation_service -->|Cache Invalidation| cache_service
    api_gateway -->|Metrics Reporting| monitoring
    data_service -->|Metrics Reporting| monitoring
    cache_service -->|Metrics Reporting| monitoring

    class lb1 userInterface
    class api_gateway apiLayer
    class cache_service service
    class data_service service
    class database database
    class message_queue service
    class monitoring service
    class cache_invalidation_service service