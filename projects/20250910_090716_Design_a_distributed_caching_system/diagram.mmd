graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - NGINX))
    api1[API Gateway - Kong]
    cache1{Distributed Cache - Redis}
    service1[Cache Management Service - Node.js]
    service2[Data Retrieval Service - Python Flask]
    db1[(Primary Database - PostgreSQL)]
    monitor1[Monitoring Service - Prometheus]
    alert1[Alerting Service - Grafana]

    lb1 -->|HTTP traffic| api1
    api1 -->|API calls| service1
    api1 -->|API calls| service2
    service1 -->|cache operations| cache1
    service2 -->|data queries| db1
    service2 -->|cache reads| cache1
    monitor1 -->|metrics collection| service1
    monitor1 -->|metrics collection| service2
    alert1 -->|alert notifications| monitor1

    class lb1 userInterface
    class api1 apiLayer
    class cache1 cache
    class service1 service
    class service2 service
    class db1 database
    class monitor1 service
    class alert1 service