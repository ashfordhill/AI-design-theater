graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - AWS Elastic Load...))
    apiGateway[API Gateway - AWS API Gateway]
    uploadService[Image Upload Service - AWS Lambda]
    imageProcessingService[Image Processing Service - AWS Lambda]
    s3Bucket[(Image Storage - AWS S3)]
    metadataDb[(Metadata Database - AWS DynamoDB)]
    notificationService[Notification Service - AWS SNS]
    cdn[[Content Delivery Network - AWS...]]

    lb1 -->|HTTP Request| apiGateway
    apiGateway -->|Trigger| uploadService
    uploadService -->|Upload Image| s3Bucket
    s3Bucket -->|S3 Event Notification| imageProcessingService
    imageProcessingService -->|Store Metadata| metadataDb
    imageProcessingService -->|Send Notification| notificationService
    s3Bucket -->|Serve Images| cdn

    class lb1 userInterface
    class apiGateway apiLayer
    class uploadService service
    class imageProcessingService service
    class s3Bucket database
    class metadataDb database
    class notificationService service
    class cdn external