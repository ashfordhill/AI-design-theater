graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - NGINX or AWS ELB))
    apiGateway[API Gateway - Apollo Server or AWS...]
    authService[Authentication Service - Express.js...]
    userService[User Service - Node.js with GraphQL]
    productService[Product Service - Node.js with GraphQL]
    orderService[Order Service - Node.js with GraphQL]
    database[(PostgreSQL Database - PostGIS for...)]
    cache{Cache - Redis}
    messageBroker[[Message Broker - Kafka]]

    lb1 -->|HTTP/HTTPS traffic| apiGateway
    apiGateway -->|Authentication requests| authService
    apiGateway -->|GraphQL queries/mutations| userService
    apiGateway -->|GraphQL queries/mutations| productService
    apiGateway -->|GraphQL queries/mutations| orderService
    authService -->|User data retrieval| database
    userService -->|User data operations| database
    productService -->|Product data operations| database
    orderService -->|Order data operations| database
    orderService -->|Order processing events| messageBroker
    cache -->|Cache for frequently accessed data| database
    userService -->|Caching user data| cache
    productService -->|Caching product data| cache
    orderService -->|Caching order data| cache

    class lb1 userInterface
    class apiGateway apiLayer
    class authService service
    class userService service
    class productService service
    class orderService service
    class database database
    class cache cache
    class messageBroker external