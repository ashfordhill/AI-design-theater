graph TB

    %% Professional Software Architecture Styling
    classDef userInterface fill:#e1f5fe,stroke:#01579b,stroke-width:2px,color:#000
    classDef apiLayer fill:#f3e5f5,stroke:#4a148c,stroke-width:2px,color:#000
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px,color:#000
    classDef database fill:#fff3e0,stroke:#e65100,stroke-width:2px,color:#000
    classDef cache fill:#fce4ec,stroke:#880e4f,stroke-width:2px,color:#000
    classDef external fill:#f1f8e9,stroke:#33691e,stroke-width:2px,color:#000

    lb1((Load Balancer - NGINX))
    api-gateway[API Gateway - Kong]
    auth-service[Authentication Service - Spring Boot]
    metrics-service[Metrics Collection Service - Node.js]
    alerting-service[Alerting Service - Python Flask]
    dashboard-service[Dashboard Service - React]
    database[(PostgreSQL Database - PostgreSQL)]
    cache{Cache - Redis}
    message-broker[[Message Broker - Kafka]]

    lb1 -->|HTTP traffic| api-gateway
    api-gateway -->|Authentication requests| auth-service
    api-gateway -->|Metrics requests| metrics-service
    api-gateway -->|Alerting requests| alerting-service
    api-gateway -->|Dashboard requests| dashboard-service
    metrics-service -->|Metrics data storage| database
    alerting-service -->|Alert data storage| database
    dashboard-service -->|Dashboard data retrieval| database
    metrics-service -->|Cached metrics| cache
    alerting-service -->|Alert notifications| message-broker
    message-broker -->|Metrics updates| metrics-service
    message-broker -->|Alert triggers| alerting-service

    class lb1 userInterface
    class api-gateway apiLayer
    class auth-service service
    class metrics-service service
    class alerting-service service
    class dashboard-service service
    class database database
    class cache cache
    class message-broker external